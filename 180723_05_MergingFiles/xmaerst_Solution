#include <stdio.h>
#define min(a, b) (a < b ? a : b)

int arr[501] = { 0 };
int sum[501] = { 0 };
int dp[501][501] = { 0 };
int main()
{
	int T, K;
	scanf("%d", &T);
	for(int i = 1; i <= T; i++)
	{
		scanf("%d", &K);
		for(int i = 1; i <= K; i++)
		{
			scanf("%d", &arr[i]);
			sum[i] = sum[i - 1] + arr[i];
		}
		for(int d = 1; d < K; d++) // d는 distance의 약자로 쓴 것
		{
			for(int i = 1; i + d <= K; i++)
			{
				int j = i + d;
				dp[i][j] = 100000000; // min 값을 구하기 때문에 범위보다 큰 즉, 무한대와 같이 큰 수로 초기화 해준다.
				for(int mid = i; mid < j; mid++) // mid는 middle의 약자로 쓴 것
				{
					dp[i][j] = min(dp[i][j], ((dp[i][mid] + dp[mid + 1][j]) + (sum[j] - sum[i - 1]))); // dp[i][j]는 수열에서 i ~ j번째 수(파일)까지 합칠 때 필요한 최소비용
															   // (sum[j] - sum[i - 1])는 i ~ j번째까지 수열의 합
															   // dp[i][j]를 갱신할 때, 왜 (sum[j] - sum[i - 1])를 해주는지?
															   // dp[i][j]를 갱신할 때, 임시 파일에 i ~ j번째까지 모두 들어가기 때문이다.
				}
			}
		}
		printf("%d\n", dp[1][K]);
	}
	return 0;
}
