#include <iostream>
#include <algorithm>

using namespace std;

int main() {
	int n, m;
	int x = 0;
	cin >> n >> m;
	int **C = new int*[n];
	int **M = new int*[n];
	for (int i = 0; i < n; i++) {
		C[i] = new int[m];
		M[i] = new int[m];
	}
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < m; j++) {
			cin >> C[i][j];
		}
	}
	if (n == 1 && m == 1) {
		x = C[0][0];
	}
	else if (n == 1 && m != 1) {
		for (int i = 0; i < m; i++) {
			x = x + C[0][i];
		}
	}
	else if (n != 1 && m == 1) {
		for (int i = 0; i < n; i++) {
			x = x + C[i][0];
		}
	}
	else {
		M[0][0] = C[0][0];
		for (int i = 1; i < m; i++) {
			M[0][i] = M[0][i - 1] + C[0][i];
		}
		for (int i = 1; i < n; i++) {
			M[i][0] = M[i - 1][0] + C[i][0];
		}
		for (int i = 1; i < n; i++) {
			for (int j = 1; j < m; j++) {
				M[i][j] = max(M[i - 1][j], M[i][j - 1]);
				M[i][j] = max(M[i][j], M[i - 1][j - 1]) + C[i][j];
			}
		}
		x = M[n - 1][m - 1];
	}
	cout << x;
	for (int i = 0; i < n; i++) {
		delete[] C[i], M[i];
	}
	delete[] C, M;
}
