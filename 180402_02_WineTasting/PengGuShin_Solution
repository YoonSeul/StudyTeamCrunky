#include <iostream>
#include <algorithm>

using namespace std;

int main() {
	int n, mAx;
	cin >> n;
	int *G = new int[n];
	int *M = new int[n];
	for (int i = 0; i < n; i++) {
		cin >> G[i];
	}
	if (n == 1) {
		mAx = G[0];
	}
	else if (n == 2) {
		mAx = G[0] + G[1];
	}
	else if (n == 3) {
		mAx = max(G[0] + G[2], G[1] + G[2]);
		mAx = max(mAx, G[0] + G[1]);
	}
	else {
		M[0] = G[0];
		M[1] = max(G[0] + G[1], M[0]);
		M[2] = max(G[0], G[1]) + G[2];
		M[2] = max(M[2], M[1]);
		for (int i = 3; i < n; i++) {
			M[i] = max(M[i - 2], M[i - 3] + G[i - 1]) + G[i];
			M[i] = max(M[i], M[i - 1]);
		}
		mAx = M[n - 1];
	}
	cout << mAx;
	delete[] M, G;
}
