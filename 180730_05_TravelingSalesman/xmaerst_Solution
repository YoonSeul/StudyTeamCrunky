#include <stdio.h>
#define min(a, b) (a < b ? a : b)

int dp[17][1 << 17] = { 0 };
int W[17][17] = { 0 };
int N;
int TS(int cur, int state) // TS는 Traveling Salesman(외판원 순회)의 약자로 쓴 것, cur은 현재 도시, state는 현재 상태를 뜻하는 것
{
	if(dp[cur][state] != -1) return dp[cur][state];
	if(state == (1 << N) - 1)
	{
		if(W[cur][0] != 0) return W[cur][0];
		else return 987654321;
	}
	dp[cur][state] = 987654321;
	for(int i = 0; i < N; i++)
	{
		if(((state&(1 << i)) == 0) && (W[cur][i] != 0))
		{
			dp[cur][state] = min(dp[cur][state], TS(i, (state | (1 << i))) + W[cur][i]);
		}
	}
	return dp[cur][state];
}
int main()
{
	scanf("%d", &N);
	for(int i = 0; i < N; i++)
	{
		for(int j = 0; j < N; j++)
		{
			scanf("%d", &W[i][j]);
		}
	}
	memset(dp, -1, sizeof(dp));
	printf("%d\n", TS(0, 1));
	return 0;
}
