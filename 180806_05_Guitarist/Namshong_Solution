#include <iostream>
#include <algorithm>
using namespace std;

void guitarist(int num, int i);

int main(){
	int N, S, M;
	cin >> N >> S >> M;

	int *volume = new int[N+1];
	bool **dp = new bool* [N+1];

	for (int i = 0; i <= N; i++){
		if (i >= 1){
			cin >> volume[i];
		}
		dp[i] = new bool[M + 1];
		for (int j = 0; j <= M; j++){
			dp[i][j] = false;
		}
	}

	dp[0][S] = true;
	for (int i = 0; i < N; i++){
		for (int j = 0; j <= M; j++){
			if (dp[i][j]){
				if (j + volume[i + 1] <= M){
					dp[i + 1][j + volume[i + 1]] = true;
				}

				if (j - volume[i + 1] >= 0){
					dp[i + 1][j - volume[i + 1]] = true;
				}
			}
		}
	}

	int maximum = -1;
	for (int i = 0; i <= M; i++){
		if (dp[N][i]){
			maximum = max(maximum, i);
		}
	}
	cout << maximum << endl;
	return 0;
}
