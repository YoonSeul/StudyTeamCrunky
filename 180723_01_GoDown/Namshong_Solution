import java.util.*;
import java.io.*;

public class GoDown {
	static int N;
	static int[][] Arr;
	static int[][] max;
	static int[][] min;
	public static void main(String[] args) throws IOException {
		BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
		N = Integer.parseInt(in.readLine());
		Arr = new int[N][3];
		max = new int[N][3];
		min = new int[N][3];
		StringTokenizer st;
		
		int i;
		for(i=0; i<N; i++) {
			st = new StringTokenizer(in.readLine());
			Arr[i][0] = Integer.parseInt(st.nextToken());
			Arr[i][1] = Integer.parseInt(st.nextToken());
			Arr[i][2] = Integer.parseInt(st.nextToken());
			
			if(i==0) {
				max[i][0] = Arr[i][0];
				max[i][1] = Arr[i][1];
				max[i][2] = Arr[i][2];
				
				min[i][0] = Arr[i][0];
				min[i][1] = Arr[i][1];
				min[i][2] = Arr[i][2];
			}else {
				max[i][0] = Math.max(max[i-1][0]+Arr[i][0], max[i-1][1]+Arr[i][0]);
				max[i][1] = Math.max(max[i-1][0]+Arr[i][1], Math.max(max[i-1][1]+Arr[i][1], max[i-1][2]+Arr[i][1]));
				max[i][2] = Math.max(max[i-1][1]+Arr[i][2], max[i-1][2]+Arr[i][2]);
				
				min[i][0] = Math.min(min[i-1][0]+Arr[i][0], min[i-1][1]+Arr[i][0]);
				min[i][1] = Math.min(min[i-1][0]+Arr[i][1], Math.min(min[i-1][1]+Arr[i][1], min[i-1][2]+Arr[i][1]));
				min[i][2] = Math.min(min[i-1][1]+Arr[i][2], min[i-1][2]+Arr[i][2]);
			}
		}
		
		int ans_max;
		int ans_min;
		
		ans_max = Math.max(max[N-1][0], Math.max(max[N-1][1], max[N-1][2]));
		ans_min = Math.min(min[N-1][0], Math.min(min[N-1][1], min[N-1][2]));
		System.out.println(ans_max +" "+ ans_min);
	}
}
